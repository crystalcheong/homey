generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@index([userId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Property {
  id                 String              @id
  clusterId          String
  type               PropertyType        @default(rent)
  stringifiedListing String
  userSaved          UserSavedProperty[]

  @@unique([id, clusterId])
}

model User {
  id            String              @id @default(cuid())
  name          String?
  email         String?             @unique
  password      String?
  image         String?
  emailVerified DateTime?
  accounts      Account[]
  sessions      Session[]
  propertySaved UserSavedProperty[]
}

model UserSavedProperty {
  propertyId String
  userId     String
  property   Property @relation(fields: [propertyId], references: [id], onDelete: Restrict)
  User       User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([propertyId, userId])
}

model Neighbourhood {
  name     String @unique
  assetUrl String
  zoneId   String
}

enum PropertyType {
  rent
  sale
}
